{"gitHash":"33d6907e343660ae918cba16903bfffdb6e8bde6","result":{"brace-expansion@2.0.0 - 2.0.1":{"kind":"dependencyAudit","name":"brace-expansion","severity":"low","range":"2.0.0 - 2.0.1","isDirect":false,"fixAvailable":true},"express-session@1.2.0 - 1.18.1":{"kind":"dependencyAudit","name":"express-session","severity":"low","version":"1.18.1","range":"1.2.0 - 1.18.1","isDirect":true,"fixAvailable":true},"on-headers@<1.1.0":{"kind":"dependencyAudit","name":"on-headers","severity":"low","range":"<1.1.0","isDirect":false,"fixAvailable":true},"xlsx@*":{"kind":"dependencyAudit","name":"xlsx","severity":"high","version":"0.18.5","range":"*","isDirect":true,"fixAvailable":false},"7aa80577ee63f3bf6bb41f3d86a14093e1ef04ca5297a3f353ddc8fdd2f705cd518eb089a84c18dfbd1cb7b92024bf32c9aba3ed3038161b268aee71b900d272_0":{"kind":"sast","location":{"path":"browser_video_diagnostics.js","start":{"line":7,"col":48},"end":{"line":7,"col":64},"lines":"videoContainers.forEach((el, i) => console.log(`Container ${i}:`, el));"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"7aa80577ee63f3bf6bb41f3d86a14093e1ef04ca5297a3f353ddc8fdd2f705cd518eb089a84c18dfbd1cb7b92024bf32c9aba3ed3038161b268aee71b900d272_0"},"88970eb4350b99eb2a957c7d18be736d66ebd09b23316a2b787799debc7765bed8266a732bb7e7ab926ef3f9d5f6f4856ce5dbf126abc961862706947dd8d7e5_0":{"kind":"sast","location":{"path":"browser_video_diagnostics.js","start":{"line":12,"col":46},"end":{"line":12,"col":58},"lines":"mediaElements.forEach((el, i) => console.log(`Media ${i}:`, el.src || 'No source'));"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"88970eb4350b99eb2a957c7d18be736d66ebd09b23316a2b787799debc7765bed8266a732bb7e7ab926ef3f9d5f6f4856ce5dbf126abc961862706947dd8d7e5_0"},"397a80995ae377decf17769c82e17b34ee2a4337ed095c9f5986ce365c9957c6a7af8ee4e251ec8950589c957d4799edea8b48fd0f6b3577db5528f97a9dd15b_0":{"kind":"sast","location":{"path":"client/index.html","start":{"line":9,"col":5},"end":{"line":10,"col":39},"lines":"    <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4816299518642143\"\n     crossorigin=\"anonymous\"></script>"},"checkId":".config..semgrep.vendored-rules.html.security.audit.missing-integrity","message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","severity":"MEDIUM","fingerprint":"397a80995ae377decf17769c82e17b34ee2a4337ed095c9f5986ce365c9957c6a7af8ee4e251ec8950589c957d4799edea8b48fd0f6b3577db5528f97a9dd15b_0"},"3002e8755e6bc041138a3d9764c5dc4c473869aa6a03b7f57387b40f6ae18690478dbc0583bebef4b11ce707f9fa40df48e1456bba2dcc13dd71b53b10dcf2da_0":{"kind":"sast","location":{"path":"client/index.html","start":{"line":9,"col":94},"end":{"line":9,"col":117},"lines":"    <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4816299518642143\""},"checkId":".config..semgrep.vendored-rules.generic.secrets.gitleaks.generic-api-key","message":"A gitleaks Generic API Key detected. Avoid hardcoding credentials directly in connection strings as this creates security risks. Instead, use environment variables to store and access credentials at runtime. If you need the actual credential values to make this work properly, ask me to provide them through Replit's secret system.","severity":"HIGH","fingerprint":"3002e8755e6bc041138a3d9764c5dc4c473869aa6a03b7f57387b40f6ae18690478dbc0583bebef4b11ce707f9fa40df48e1456bba2dcc13dd71b53b10dcf2da_0"},"6b689c81c7f8718fe0eaa2375a1067ad991c6c4118546af4289fa2ac8a518ae1017e0686daff4c44f5035bd09e7086a6372828794fde14136a19d796aa87fc4e_0":{"kind":"sast","location":{"path":"client/index.html","start":{"line":16,"col":5},"end":{"line":16,"col":101},"lines":"    <script type=\"text/javascript\" src=\"https://replit.com/public/js/replit-dev-banner.js\"></script>"},"checkId":".config..semgrep.vendored-rules.html.security.audit.missing-integrity","message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","severity":"MEDIUM","fingerprint":"6b689c81c7f8718fe0eaa2375a1067ad991c6c4118546af4289fa2ac8a518ae1017e0686daff4c44f5035bd09e7086a6372828794fde14136a19d796aa87fc4e_0"},"30dc9cfe91b84ee2cc893636a11d7c83798b07fcefa4d5f6648920f5e456f65bc14088d39810710a88ea43bcd22f98dfae106ccdec349201a30b495362f7367a_0":{"kind":"sast","location":{"path":"client/src/components/AISummary.tsx","start":{"line":92,"col":21},"end":{"line":92,"col":62},"lines":"      console.error(`Error generating ${summaryType} summary:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"30dc9cfe91b84ee2cc893636a11d7c83798b07fcefa4d5f6648920f5e456f65bc14088d39810710a88ea43bcd22f98dfae106ccdec349201a30b495362f7367a_0"},"b0538b920ba7e1811ce09f8ee4cd6e34fe45317da7fb3c20544b8b06508be2e9e5fb8e6e82cc9f9703b4703ef8b8ca767183bd15e5fc29d5911e45d27acdcaf1_0":{"kind":"sast","location":{"path":"client/src/components/FeaturedVideo.tsx","start":{"line":75,"col":25},"end":{"line":75,"col":92},"lines":"            console.log(`🎬 Found ${filteredVideos.length} filtered Tier 1 videos, using:`, filteredVideos[0].title);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"b0538b920ba7e1811ce09f8ee4cd6e34fe45317da7fb3c20544b8b06508be2e9e5fb8e6e82cc9f9703b4703ef8b8ca767183bd15e5fc29d5911e45d27acdcaf1_0"},"33db4bed84264cb23aa74daa0a4533146298f5ffb3d076876558d67811857c0f79d6d5279204145854c1f1c4cdeb2405c1aafe97eaa2badb189929b92a177906_0":{"kind":"sast","location":{"path":"client/src/components/ads/AdUnit.tsx","start":{"line":87,"col":25},"end":{"line":87,"col":48},"lines":"        data-ad-client=\"ca-pub-4816299518642143\""},"checkId":".config..semgrep.vendored-rules.generic.secrets.gitleaks.generic-api-key","message":"A gitleaks Generic API Key detected. Avoid hardcoding credentials directly in connection strings as this creates security risks. Instead, use environment variables to store and access credentials at runtime. If you need the actual credential values to make this work properly, ask me to provide them through Replit's secret system.","severity":"HIGH","fingerprint":"33db4bed84264cb23aa74daa0a4533146298f5ffb3d076876558d67811857c0f79d6d5279204145854c1f1c4cdeb2405c1aafe97eaa2badb189929b92a177906_0"},"df50d24921641d0ec61fe2ebe8eea878327c4d9baebe921c07bd10b4e0a8d91fe21b3afa46cd70c9eb5f7b00287d463ed4896ae9370a5be82e42ae640bc831f5_0":{"kind":"sast","location":{"path":"client/src/components/dealer-map.tsx","start":{"line":46,"col":11},"end":{"line":48,"col":11},"lines":"    html: `<div class=\"cluster-marker cluster-${size}\">\n      <span>${count}</span>\n    </div>`,"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"df50d24921641d0ec61fe2ebe8eea878327c4d9baebe921c07bd10b4e0a8d91fe21b3afa46cd70c9eb5f7b00287d463ed4896ae9370a5be82e42ae640bc831f5_0"},"61f316f10828d86ddef9ffef0743f3b0ed4221faafae3f626e3032c2650c714ec25ee4acf422c108917a4c2beec2424ae797b86b3941326883610e6b5974f612_0":{"kind":"sast","location":{"path":"client/src/pages/classifieds.tsx","start":{"line":455,"col":69},"end":{"line":455,"col":256},"lines":"                              onClick={() => window.location.href = `mailto:${classified.sellerEmail}?subject=Interest in ${classified.title}&body=Hi, I'm interested in your ${classified.year} ${classified.make} ${classified.model}. Is it still available?`}"},"checkId":".config..semgrep.vendored-rules.javascript.browser.security.js-open-redirect-from-function","message":"The application accepts potentially user-controlled input `classified` which can control the location of the current window context. This can lead two types of vulnerabilities open-redirection and Cross-Site-Scripting (XSS) with JavaScript URIs. It is recommended to validate user-controllable input before allowing it to control the redirection.","severity":"LOW","fingerprint":"61f316f10828d86ddef9ffef0743f3b0ed4221faafae3f626e3032c2650c714ec25ee4acf422c108917a4c2beec2424ae797b86b3941326883610e6b5974f612_0"},"af215b4fe94a106dfcb5a5c9e7f5a32507c624bbac160d8853f54469f9c44640a3c9ed9a70ca287b3b6158c2f1aa563e3e87e7c64686e6a99246e2aa647c1637_0":{"kind":"sast","location":{"path":"scripts/import_epa_data.js","start":{"line":27,"col":20},"end":{"line":27,"col":56},"lines":"      console.warn(`Attempt ${i + 1} failed for ${url}:`, error.message);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"af215b4fe94a106dfcb5a5c9e7f5a32507c624bbac160d8853f54469f9c44640a3c9ed9a70ca287b3b6158c2f1aa563e3e87e7c64686e6a99246e2aa647c1637_0"},"6ccba92f67dcfc46362b5941b21684e9629e0a77a9a5b988b29c9e48ac9381e6d4e7bbd3b86901ed1ed6c5b11e4db54dd961890ba48ea3a809ba4169fbffb694_0":{"kind":"sast","location":{"path":"scripts/import_epa_data.js","start":{"line":58,"col":19},"end":{"line":58,"col":53},"lines":"    console.error(`Error fetching makes for ${year}:`, error.message);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"6ccba92f67dcfc46362b5941b21684e9629e0a77a9a5b988b29c9e48ac9381e6d4e7bbd3b86901ed1ed6c5b11e4db54dd961890ba48ea3a809ba4169fbffb694_0"},"11e7f0d0502daf71ca93b76d3179c26bd41a2565094c2105121752118e222e5231604039b7ab152fe3afe4f1981125f9d43a0fb4d6bac37bac70aa4aa90c4154_0":{"kind":"sast","location":{"path":"scripts/import_epa_data.js","start":{"line":70,"col":19},"end":{"line":70,"col":62},"lines":"    console.error(`Error fetching models for ${year} ${make}:`, error.message);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"11e7f0d0502daf71ca93b76d3179c26bd41a2565094c2105121752118e222e5231604039b7ab152fe3afe4f1981125f9d43a0fb4d6bac37bac70aa4aa90c4154_0"},"1ca18f497a1e1df7574274dafbfcb80f15498d8252c4c3f97215ec5dcf945074345e36ce57a5d7adfa82505df50dcc1a7c3aeaa68f71e45efcd400798f0c4121_0":{"kind":"sast","location":{"path":"scripts/import_epa_data.js","start":{"line":85,"col":19},"end":{"line":85,"col":72},"lines":"    console.error(`Error fetching options for ${year} ${make} ${model}:`, error.message);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"1ca18f497a1e1df7574274dafbfcb80f15498d8252c4c3f97215ec5dcf945074345e36ce57a5d7adfa82505df50dcc1a7c3aeaa68f71e45efcd400798f0c4121_0"},"bdde4966333ad36aa78f3a27a09d980df89be7314bc8ef51867b5121b34b4ca304bcbc024626749850373f6966dd2eecbd274e7a83433c927672e61f3e7e30e5_0":{"kind":"sast","location":{"path":"scripts/import_epa_data.js","start":{"line":96,"col":19},"end":{"line":96,"col":56},"lines":"    console.error(`Error fetching vehicle ${vehicleId}:`, error.message);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"bdde4966333ad36aa78f3a27a09d980df89be7314bc8ef51867b5121b34b4ca304bcbc024626749850373f6966dd2eecbd274e7a83433c927672e61f3e7e30e5_0"},"2914e5880b10bcdb07bf7c60538857d67d3832f6308ef654e9deddb3674b8b4f9c4c07992ae639fc41fd8542a9bb494eaa1f6671ff6b77a65bf48653c3e1abf0_0":{"kind":"sast","location":{"path":"scripts/import_epa_data.js","start":{"line":243,"col":26},"end":{"line":243,"col":66},"lines":"            console.warn(`    ⚠️ Error with ${make} ${model}:`, error.message);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"2914e5880b10bcdb07bf7c60538857d67d3832f6308ef654e9deddb3674b8b4f9c4c07992ae639fc41fd8542a9bb494eaa1f6671ff6b77a65bf48653c3e1abf0_0"},"5ce641454bcd24ec78f8825e15a7468f640d74e4c81a3687c0a8f5f2e5b131c4373a2802bfab352120a169a4e0a1b416b9158c74297713b1b846b1dbe1367e45_0":{"kind":"sast","location":{"path":"scripts/import_epa_data.js","start":{"line":247,"col":22},"end":{"line":247,"col":56},"lines":"        console.warn(`  ⚠️ Error with make ${make}:`, error.message);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"5ce641454bcd24ec78f8825e15a7468f640d74e4c81a3687c0a8f5f2e5b131c4373a2802bfab352120a169a4e0a1b416b9158c74297713b1b846b1dbe1367e45_0"},"2ac83ed9559dd8511fd2b582e9dc6a089bf915752cc46a5658856983b5b7c2cfe0b0ba496d3f6ff9c6b9ef8dbf75a41133879b447e58e7c4a65b3c16f96607bc_0":{"kind":"sast","location":{"path":"scripts/populate_fuel_economy_data.js","start":{"line":95,"col":21},"end":{"line":95,"col":58},"lines":"      console.error(`  ❌ Error processing year ${year}:`, error.message);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"2ac83ed9559dd8511fd2b582e9dc6a089bf915752cc46a5658856983b5b7c2cfe0b0ba496d3f6ff9c6b9ef8dbf75a41133879b447e58e7c4a65b3c16f96607bc_0"},"7d37f468503d53001343a919c01c455980a6f1ceb1cded92dad33a5e10960472055314fdcd7e10358dfb0908a657574800e43c7e9c23f9bd0b5b0bcb0c085117_0":{"kind":"sast","location":{"path":"scripts/populate_fuel_economy_data.js","start":{"line":116,"col":21},"end":{"line":116,"col":63},"lines":"      console.error(`    ❌ Error processing ${year} ${make}:`, error.message);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"7d37f468503d53001343a919c01c455980a6f1ceb1cded92dad33a5e10960472055314fdcd7e10358dfb0908a657574800e43c7e9c23f9bd0b5b0bcb0c085117_0"},"b4f015afbc7e1e877b176ee3ee0c6cc49b32c80f1a8a5ec863dfb8a25f9fa7fb8198e199ea80a6d2859dd6bd030dd78bf1be2c79ce3e92a2eb1d8dc2268a786e_0":{"kind":"sast","location":{"path":"scripts/populate_fuel_economy_data.js","start":{"line":158,"col":21},"end":{"line":158,"col":74},"lines":"      console.error(`      ❌ Error processing ${year} ${make} ${model}:`, error.message);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"b4f015afbc7e1e877b176ee3ee0c6cc49b32c80f1a8a5ec863dfb8a25f9fa7fb8198e199ea80a6d2859dd6bd030dd78bf1be2c79ce3e92a2eb1d8dc2268a786e_0"},"d6dfc68d37995febb00e6562d574d9d9cea124851a4409794e371c1d5f766979356747e426fe19a12b85e6c5429a35d8bf21b1cd2c46c8a3d54357050a8b2e16_0":{"kind":"sast","location":{"path":"server/dbfParser.ts","start":{"line":50,"col":35},"end":{"line":50,"col":43},"lines":"    this.buffer = fs.readFileSync(filePath);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename","message":"Detected that function argument `filePath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated.","severity":"MEDIUM","fingerprint":"d6dfc68d37995febb00e6562d574d9d9cea124851a4409794e371c1d5f766979356747e426fe19a12b85e6c5429a35d8bf21b1cd2c46c8a3d54357050a8b2e16_0"},"58711b3726c943823d089caf48083308228195a49a69b99fecfc74363973e4410dbd541b6ce3386bbf4fc400d8449db05e2b3041efd21437d5dcea08bfaf9c19_0":{"kind":"sast","location":{"path":"server/dbfParser.ts","start":{"line":134,"col":22},"end":{"line":134,"col":49},"lines":"        console.warn(`Error reading record ${i}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"58711b3726c943823d089caf48083308228195a49a69b99fecfc74363973e4410dbd541b6ce3386bbf4fc400d8449db05e2b3041efd21437d5dcea08bfaf9c19_0"},"54c3f9c5cba5ad9356a5db17ddc6b25670124b87f6198c8ec39e475e163bd75269e7514ce29b6e9edeb83764084bc61e779527d793681831b79e9b2ccdb18ad3_0":{"kind":"sast","location":{"path":"server/emailService.ts","start":{"line":169,"col":11},"end":{"line":169,"col":61},"lines":"        ? `AutoWorld <noreply@${process.env.MAILGUN_DOMAIN}>` "},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"54c3f9c5cba5ad9356a5db17ddc6b25670124b87f6198c8ec39e475e163bd75269e7514ce29b6e9edeb83764084bc61e779527d793681831b79e9b2ccdb18ad3_0"},"54c3f9c5cba5ad9356a5db17ddc6b25670124b87f6198c8ec39e475e163bd75269e7514ce29b6e9edeb83764084bc61e779527d793681831b79e9b2ccdb18ad3_1":{"kind":"sast","location":{"path":"server/emailService.ts","start":{"line":207,"col":11},"end":{"line":207,"col":61},"lines":"        ? `AutoWorld <noreply@${process.env.MAILGUN_DOMAIN}>` "},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"54c3f9c5cba5ad9356a5db17ddc6b25670124b87f6198c8ec39e475e163bd75269e7514ce29b6e9edeb83764084bc61e779527d793681831b79e9b2ccdb18ad3_1"},"e52b4aca0b52fd6b225fa7c920fe7661fd0c274869eee809caf9a46f5434a3edae13511c63d1e71ec9eac2c7a4d48873a99ffbe78f63ab8ccd8f210fccb63916_0":{"kind":"sast","location":{"path":"server/emailService.ts","start":{"line":262,"col":14},"end":{"line":271,"col":3},"lines":"  let html = `\n    <h2>New ${quoteType} Quote Submission</h2>\n    <h3>Contact Information:</h3>\n    <ul>\n      <li><strong>Name:</strong> ${quoteData.firstName} ${quoteData.lastName}</li>\n      <li><strong>Email:</strong> ${quoteData.email}</li>\n      <li><strong>Phone:</strong> ${quoteData.phone}</li>\n      <li><strong>ZIP Code:</strong> ${quoteData.zipCode}</li>\n    </ul>\n  `;"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"e52b4aca0b52fd6b225fa7c920fe7661fd0c274869eee809caf9a46f5434a3edae13511c63d1e71ec9eac2c7a4d48873a99ffbe78f63ab8ccd8f210fccb63916_0"},"a641221b1134892726a4e2db49ef7d523c88fc2b6432fa81170d48d7277f179f8220875d88cf185b098f59aeec22502acf87af3d1b79e6fc2e6db78ce3e36b54_0":{"kind":"sast","location":{"path":"server/emailService.ts","start":{"line":282,"col":13},"end":{"line":292,"col":5},"lines":"    html += `\n      <h3>Vehicle Information:</h3>\n      <ul>\n        <li><strong>Type:</strong> ${quoteData.quoteType}</li>\n        <li><strong>Make:</strong> ${quoteData.make}</li>\n        <li><strong>Model:</strong> ${quoteData.model}</li>\n        <li><strong>Year:</strong> ${quoteData.year}</li>\n        <li><strong>Financing:</strong> ${quoteData.financing}</li>\n        <li><strong>Timeframe:</strong> ${quoteData.timeframe}</li>\n      </ul>\n    `;"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"a641221b1134892726a4e2db49ef7d523c88fc2b6432fa81170d48d7277f179f8220875d88cf185b098f59aeec22502acf87af3d1b79e6fc2e6db78ce3e36b54_0"},"eb6fd753ed6e90e8922eb5fdee7fa1db95fa7fdd5bcb895adcb31fb502a875591c53af86f56243fa172bd3cd8bcb7e55700fd8238e6decfb15ea9913453feb90_0":{"kind":"sast","location":{"path":"server/emailService.ts","start":{"line":302,"col":13},"end":{"line":312,"col":5},"lines":"    html += `\n      <h3>Vehicle Information:</h3>\n      <ul>\n        <li><strong>Make:</strong> ${quoteData.vehicleMake}</li>\n        <li><strong>Model:</strong> ${quoteData.vehicleModel}</li>\n        <li><strong>Year:</strong> ${quoteData.vehicleYear}</li>\n        <li><strong>Coverage Type:</strong> ${quoteData.coverageType}</li>\n        <li><strong>Current Insurance:</strong> ${quoteData.currentInsurance ? 'Yes' : 'No'}</li>\n        <li><strong>Driving Record:</strong> ${quoteData.drivingRecord}</li>\n      </ul>\n    `;"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"eb6fd753ed6e90e8922eb5fdee7fa1db95fa7fdd5bcb895adcb31fb502a875591c53af86f56243fa172bd3cd8bcb7e55700fd8238e6decfb15ea9913453feb90_0"},"eed916204435876b79a83a59dbb707b1587aa85a8c93cb546549b7ce89f7ba3561b78f8494bfaed8c82049153eaedfee7fd541fd21ad0c216ffbbf317460fc12_0":{"kind":"sast","location":{"path":"server/emailService.ts","start":{"line":322,"col":13},"end":{"line":330,"col":5},"lines":"    html += `\n      <h3>Financing Information:</h3>\n      <ul>\n        <li><strong>Employment:</strong> ${quoteData.employmentStatus}</li>\n        <li><strong>Monthly Income:</strong> $${quoteData.monthlyIncome}</li>\n        <li><strong>Loan Amount:</strong> $${quoteData.loanAmount}</li>\n        <li><strong>Loan Term:</strong> ${quoteData.loanTerm} months</li>\n      </ul>\n    `;"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"eed916204435876b79a83a59dbb707b1587aa85a8c93cb546549b7ce89f7ba3561b78f8494bfaed8c82049153eaedfee7fd541fd21ad0c216ffbbf317460fc12_0"},"1624d36d7cc99644545d79e6c96584eb92f9cfeea95f41bfe73a24887671e2f43b37b437d906bf1d9c601f90bd291189190c5d8931385350aae0301e0f929e08_0":{"kind":"sast","location":{"path":"server/emailService.ts","start":{"line":339,"col":11},"end":{"line":339,"col":72},"lines":"  html += `<p><em>Submitted on: ${new Date().toLocaleString()}</em></p>`;"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"1624d36d7cc99644545d79e6c96584eb92f9cfeea95f41bfe73a24887671e2f43b37b437d906bf1d9c601f90bd291189190c5d8931385350aae0301e0f929e08_0"},"7acce71eb8b7482164288d420caea9a5e7268f311ab27400a51b9b203b414cf2ad2779b76e5f359a0ea50bcdc9ee7961d3f0f6d59b185d9b2b83cac5b88708f9_0":{"kind":"sast","location":{"path":"server/epaDataImporter.ts","start":{"line":71,"col":22},"end":{"line":71,"col":64},"lines":"        console.warn(`Fetch attempt ${i + 1} failed for ${url}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"7acce71eb8b7482164288d420caea9a5e7268f311ab27400a51b9b203b414cf2ad2779b76e5f359a0ea50bcdc9ee7961d3f0f6d59b185d9b2b83cac5b88708f9_0"},"4cfd89bf86edf8417efce4c5b35994159c02699d04f3b3328e5bbf61afd4903072d05eff21e0f4d4a17962331554a887dbf3814b0acb7601c5d3b7414c66091e_0":{"kind":"sast","location":{"path":"server/epaDataImporter.ts","start":{"line":100,"col":21},"end":{"line":100,"col":60},"lines":"      console.error(`Error fetching makes for year ${year}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"4cfd89bf86edf8417efce4c5b35994159c02699d04f3b3328e5bbf61afd4903072d05eff21e0f4d4a17962331554a887dbf3814b0acb7601c5d3b7414c66091e_0"},"4ca87a8b6f6f5069a550c9ac565f600eb3db5e00bf5f34e0254f2f3ba62e60c1b39cbcd6d229a7dd297521995f824ddc66761ce7553e1e4c228770605c48d366_0":{"kind":"sast","location":{"path":"server/epaDataImporter.ts","start":{"line":111,"col":21},"end":{"line":111,"col":64},"lines":"      console.error(`Error fetching models for ${year} ${make}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"4ca87a8b6f6f5069a550c9ac565f600eb3db5e00bf5f34e0254f2f3ba62e60c1b39cbcd6d229a7dd297521995f824ddc66761ce7553e1e4c228770605c48d366_0"},"c67ff453d963611b0c01d49cd0deae72ed1b311dbae2baf8e3fd58ec72faba2bd8a967b8b5ac066665917f8d568df8f25c1e4c9981d6b33285e026097a038d2d_0":{"kind":"sast","location":{"path":"server/epaDataImporter.ts","start":{"line":125,"col":21},"end":{"line":125,"col":74},"lines":"      console.error(`Error fetching options for ${year} ${make} ${model}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"c67ff453d963611b0c01d49cd0deae72ed1b311dbae2baf8e3fd58ec72faba2bd8a967b8b5ac066665917f8d568df8f25c1e4c9981d6b33285e026097a038d2d_0"},"28dac9decb43e08f0c2fa8e2a0e54050b9b20e6dc5ca4aa25b25a1091020b4cbbbe24555492978ee16b1baa82b1f4290ee38e52ccd48c83300237a70e98a90bc_0":{"kind":"sast","location":{"path":"server/epaDataImporter.ts","start":{"line":135,"col":21},"end":{"line":135,"col":70},"lines":"      console.error(`Error fetching details for vehicle ${vehicleId}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"28dac9decb43e08f0c2fa8e2a0e54050b9b20e6dc5ca4aa25b25a1091020b4cbbbe24555492978ee16b1baa82b1f4290ee38e52ccd48c83300237a70e98a90bc_0"},"0b5d4740052eac29ce8ab3a8ae9c7080ef4e293adedd7e0a02e0a50061918358e495cd8809b73efde4a02e0d6baa7a047e695dba8071173027a2a8c6444ad401_0":{"kind":"sast","location":{"path":"server/epaDataImporter.ts","start":{"line":249,"col":34},"end":{"line":249,"col":72},"lines":"                    console.warn(`Failed to save vehicle ${vehicle.id}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"0b5d4740052eac29ce8ab3a8ae9c7080ef4e293adedd7e0a02e0a50061918358e495cd8809b73efde4a02e0d6baa7a047e695dba8071173027a2a8c6444ad401_0"},"375caacc54fc459388fb4f4c7306f9e9f8cbff82941bc21ed93d6e56c9b97cb69195ee122b93538440e50e84274c010b12b329fc326cc8719229a39702bbae24_0":{"kind":"sast","location":{"path":"server/epaDataImporter.ts","start":{"line":258,"col":26},"end":{"line":258,"col":67},"lines":"            console.warn(`Error processing model ${make} ${model}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"375caacc54fc459388fb4f4c7306f9e9f8cbff82941bc21ed93d6e56c9b97cb69195ee122b93538440e50e84274c010b12b329fc326cc8719229a39702bbae24_0"},"f14ff30042c99eafee4c6ed520a2e08e1af4035fbfff755101b43e5a0c2ceaecc36274f09bd247b74ee5938b16c862252a5cbf8db9adc61dc101daf116ed3234_0":{"kind":"sast","location":{"path":"server/epaDataImporter.ts","start":{"line":262,"col":22},"end":{"line":262,"col":53},"lines":"        console.warn(`Error processing make ${make}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"f14ff30042c99eafee4c6ed520a2e08e1af4035fbfff755101b43e5a0c2ceaecc36274f09bd247b74ee5938b16c862252a5cbf8db9adc61dc101daf116ed3234_0"},"faa51d9622f44727defa17227f912c3d2a278c2bd6f5f5e6153c2add9ddb0569d11805c794652eccf086ca03505100a22f3df9a712f176c4f63303ddfc53957b_0":{"kind":"sast","location":{"path":"server/epaDataImporter.ts","start":{"line":311,"col":28},"end":{"line":318,"col":9},"lines":"      const result = await db.execute(`\n        SELECT \n          COUNT(*) as total,\n          MIN(year) as min_year,\n          MAX(year) as max_year,\n          MAX(updated_at) as last_update\n        FROM fuel_economy_data\n      `);"},"checkId":".config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw","message":"Replace pool.query(), db.execute() and sql.raw() calls with Drizzle's recommended sql`...` template literals or Drizzle's query builders. This is a required coding standard for all Drizzle projects regardless of context (including migrations). Raw string queries violate framework conventions and must be converted to maintain codebase consistency and type safety.","severity":"HIGH","fingerprint":"faa51d9622f44727defa17227f912c3d2a278c2bd6f5f5e6153c2add9ddb0569d11805c794652eccf086ca03505100a22f3df9a712f176c4f63303ddfc53957b_0"},"f1f4e58008faf07f4ed5a31260739cf1d96bd9f0473e0388ebe8fffcfb19341a5b984a73ccff4d1e18c7b590a649719b45ccadde3d0335cf8dfc41483961d098_0":{"kind":"sast","location":{"path":"server/epaFuelEconomyService.ts","start":{"line":40,"col":21},"end":{"line":40,"col":64},"lines":"      console.error(`Error fetching EPA makes for year ${year}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"f1f4e58008faf07f4ed5a31260739cf1d96bd9f0473e0388ebe8fffcfb19341a5b984a73ccff4d1e18c7b590a649719b45ccadde3d0335cf8dfc41483961d098_0"},"bc8f133db19f3096cba919714b8e953760e87e2ebd5d8a37ff22cc084331cbb9b72f3c117d31255d288760077eb942b43be7f2d34b98fc15dd4da061d1bb89e9_0":{"kind":"sast","location":{"path":"server/epaFuelEconomyService.ts","start":{"line":59,"col":21},"end":{"line":59,"col":68},"lines":"      console.error(`Error fetching EPA models for ${year} ${make}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"bc8f133db19f3096cba919714b8e953760e87e2ebd5d8a37ff22cc084331cbb9b72f3c117d31255d288760077eb942b43be7f2d34b98fc15dd4da061d1bb89e9_0"},"43abe852db90790d95b6f436e52f98d27e3783b4bbde2f5e7d2063857624d85736221b8a095ff3bdfb7943504fa06494dbef8c851ac02507a1ee1b486c6a9cce_0":{"kind":"sast","location":{"path":"server/epaFuelEconomyService.ts","start":{"line":79,"col":21},"end":{"line":79,"col":78},"lines":"      console.error(`Error fetching EPA options for ${year} ${make} ${model}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"43abe852db90790d95b6f436e52f98d27e3783b4bbde2f5e7d2063857624d85736221b8a095ff3bdfb7943504fa06494dbef8c851ac02507a1ee1b486c6a9cce_0"},"c04ae3325a8e680e3fb008701dd268be53c59ac61ab495476826cc9d9d1078ca4c9bb45a3307018f313bb2320507678465402fe24d814d35d2e79d88d199406f_0":{"kind":"sast","location":{"path":"server/epaFuelEconomyService.ts","start":{"line":101,"col":21},"end":{"line":101,"col":58},"lines":"      console.error(`Error fetching EPA vehicle ${epaId}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"c04ae3325a8e680e3fb008701dd268be53c59ac61ab495476826cc9d9d1078ca4c9bb45a3307018f313bb2320507678465402fe24d814d35d2e79d88d199406f_0"},"414e9c52422aa72c847b8bfc90df2affcaf22ebf259cb01d28bf657bb201fca4a3cc77b990b812d844904143491c8f458b043864023d1a8c56021d4ac7ca2676_0":{"kind":"sast","location":{"path":"server/epaFuelEconomyService.ts","start":{"line":120,"col":21},"end":{"line":120,"col":67},"lines":"      console.error(`Error fetching EPA vehicles for year ${year}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"414e9c52422aa72c847b8bfc90df2affcaf22ebf259cb01d28bf657bb201fca4a3cc77b990b812d844904143491c8f458b043864023d1a8c56021d4ac7ca2676_0"},"ad8433e59edad4fc696112bc191c2c9f36bec64d9c240d0253e03e03ff499a500f4ea249bff524615a85eed775182aa1b0a0d49a9ae6b6d1c0d3cbe4ae5ba44e_0":{"kind":"sast","location":{"path":"server/epaFuelEconomyService.ts","start":{"line":220,"col":25},"end":{"line":220,"col":68},"lines":"          console.error(`✗ Error importing vehicle ${vehicle.id}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"ad8433e59edad4fc696112bc191c2c9f36bec64d9c240d0253e03e03ff499a500f4ea249bff524615a85eed775182aa1b0a0d49a9ae6b6d1c0d3cbe4ae5ba44e_0"},"96de9bc8777e9274db8341d993174d56d0ebe9282946bde43ea62805170aa3a10009935901380fa94c10e3f2f65a0949253945062ff8c112ecace333390caac0_0":{"kind":"sast","location":{"path":"server/excelImporter.ts","start":{"line":100,"col":26},"end":{"line":100,"col":64},"lines":"            console.warn(`⚠️ Skipping invalid row ${i + 1}:`, { make: vehicle.make, model: vehicle.model, msrp: vehicle.msrp });"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"96de9bc8777e9274db8341d993174d56d0ebe9282946bde43ea62805170aa3a10009935901380fa94c10e3f2f65a0949253945062ff8c112ecace333390caac0_0"},"60e0292fe3b01a2f2431eee7f1b94f151f683effd396e1a409ab9cfa0e7b7af362b9bbe83ae7306b67e392e7526d6fa520cb4221cc070a620ae28369d3b6f8d5_0":{"kind":"sast","location":{"path":"server/excelImporter.ts","start":{"line":103,"col":24},"end":{"line":103,"col":59},"lines":"          console.warn(`⚠️ Error parsing row ${i + 1}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"60e0292fe3b01a2f2431eee7f1b94f151f683effd396e1a409ab9cfa0e7b7af362b9bbe83ae7306b67e392e7526d6fa520cb4221cc070a620ae28369d3b6f8d5_0"},"0b2340978eb1b52e7b7ec3420e638e04b562bcef6a71fc85da0dddf4109ea1bd671fdb72e74aeab723195e1275fa98354300ef288bd46205ca93dd6c1cefd788_0":{"kind":"sast","location":{"path":"server/excelImporter.ts","start":{"line":153,"col":21},"end":{"line":153,"col":56},"lines":"      console.error(`❌ Import failed for ${filePath}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"0b2340978eb1b52e7b7ec3420e638e04b562bcef6a71fc85da0dddf4109ea1bd671fdb72e74aeab723195e1275fa98354300ef288bd46205ca93dd6c1cefd788_0"},"258fc731639ce12c4936e6702042283bab739d6a6e648e5394f39b5872f826918d880f25ff6e2eb5e3052d8546d4de40ed8b1d51c4535ef057aadbb492843161_0":{"kind":"sast","location":{"path":"server/excelImporter.ts","start":{"line":177,"col":25},"end":{"line":177,"col":52},"lines":"      return parseFloat(cleanValue.replace('%', '')).toFixed(2);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.incomplete-sanitization","message":"`cleanValue.replace` method will only replace the first occurrence when used with a string argument ('%'). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag.","severity":"MEDIUM","fingerprint":"258fc731639ce12c4936e6702042283bab739d6a6e648e5394f39b5872f826918d880f25ff6e2eb5e3052d8546d4de40ed8b1d51c4535ef057aadbb492843161_0"},"665dc62d74abedce68a5931622d23f05bc214d349543fc329a4cc2650779647360193ffd91213563dc6457cf1600acd725adaa068747ebfca95151af3598a554_0":{"kind":"sast","location":{"path":"server/excelImporter.ts","start":{"line":219,"col":23},"end":{"line":219,"col":53},"lines":"        console.error(`❌ Failed to import ${path}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"665dc62d74abedce68a5931622d23f05bc214d349543fc329a4cc2650779647360193ffd91213563dc6457cf1600acd725adaa068747ebfca95151af3598a554_0"},"6717c09a74a1522f0932170ffbe90715caa79a74927245fa5d908c4580cc38e76734c198a5379dd4b7935009fe8f0a2ee2fc8240b3422c0b2d552f7efccc1298_0":{"kind":"sast","location":{"path":"server/manufacturerVideoAggregator.ts","start":{"line":142,"col":25},"end":{"line":142,"col":77},"lines":"          console.error(`Failed to fetch videos from ${source.manufacturer}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"6717c09a74a1522f0932170ffbe90715caa79a74927245fa5d908c4580cc38e76734c198a5379dd4b7935009fe8f0a2ee2fc8240b3422c0b2d552f7efccc1298_0"},"9a83652018d9a79a30052aaac8a3262602d47c66248c73ae9ec29b364694217b7d7e9e59a47618032e84a7fd773a9c44c0f023f0b4f0995fdc6aa305ae471851_0":{"kind":"sast","location":{"path":"server/manufacturerVideoAggregator.ts","start":{"line":193,"col":31},"end":{"line":193,"col":37},"lines":"      const videoElements = $(source.selectors.videoContainers).slice(0, 5).toArray(); // Limit per source"},"checkId":".config..semgrep.vendored-rules.javascript.jquery.security.audit.jquery-insecure-selector","message":"User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities","severity":"MEDIUM","fingerprint":"9a83652018d9a79a30052aaac8a3262602d47c66248c73ae9ec29b364694217b7d7e9e59a47618032e84a7fd773a9c44c0f023f0b4f0995fdc6aa305ae471851_0"},"e39262068c60979f2b37bad8bff855195a480a18f9dce294298512d00d784d11285fc592ffd4c854ae5cd885e059244ad49683b60ff73951294b9115b1b8c66a_0":{"kind":"sast","location":{"path":"server/manufacturerVideoAggregator.ts","start":{"line":261,"col":21},"end":{"line":261,"col":72},"lines":"      console.error(`Error fetching videos from ${source.manufacturer}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"e39262068c60979f2b37bad8bff855195a480a18f9dce294298512d00d784d11285fc592ffd4c854ae5cd885e059244ad49683b60ff73951294b9115b1b8c66a_0"},"6f529033181f95b6efb082e2f7633090a19d5e09cb74ae1641f5494cb45b3239f1662d60777b4e2086eb223f628cc15d3c27060157040b79ce5d95c0fe78ffdb_0":{"kind":"sast","location":{"path":"server/manufacturerVideoAggregator.ts","start":{"line":273,"col":16},"end":{"line":273,"col":138},"lines":"        return `<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/${videoId}\" frameborder=\"0\" allowfullscreen></iframe>`;"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"6f529033181f95b6efb082e2f7633090a19d5e09cb74ae1641f5494cb45b3239f1662d60777b4e2086eb223f628cc15d3c27060157040b79ce5d95c0fe78ffdb_0"},"b8879b9b49a96209bd980e132623c9fe2d7b392ac3611c554ca96d4addf088aef3689db65e47b56a07c4fefb4e91eb781ce318efafe860dd67ea4eaf47b9a434_0":{"kind":"sast","location":{"path":"server/manufacturerVideoAggregator.ts","start":{"line":281,"col":16},"end":{"line":281,"col":139},"lines":"        return `<iframe src=\"https://player.vimeo.com/video/${videoId}\" width=\"560\" height=\"315\" frameborder=\"0\" allowfullscreen></iframe>`;"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"b8879b9b49a96209bd980e132623c9fe2d7b392ac3611c554ca96d4addf088aef3689db65e47b56a07c4fefb4e91eb781ce318efafe860dd67ea4eaf47b9a434_0"},"87ad360271dd901926ac51834d48cbb77c0c2df29c32e300bc0b6ad9e5a45adc2dade1da82db5983868620e5857ae77fb7423abd2290a0c721393dc5b997cfc4_0":{"kind":"sast","location":{"path":"server/manufacturerVideoAggregator.ts","start":{"line":287,"col":14},"end":{"line":287,"col":151},"lines":"      return `<video width=\"560\" height=\"315\" controls><source src=\"${videoUrl}\" type=\"video/mp4\">Your browser does not support the video tag.</video>`;"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"87ad360271dd901926ac51834d48cbb77c0c2df29c32e300bc0b6ad9e5a45adc2dade1da82db5983868620e5857ae77fb7423abd2290a0c721393dc5b997cfc4_0"},"30db316a6b7a1ed79123a5d2116cdd31a765a43b9e8378c7cbb4abbc9ba3f45890010e158b3fc4afe9f62986dbf77bba25d50cc34a878c77769bd8cb2c2935f7_0":{"kind":"sast","location":{"path":"server/marketPriceProvider.ts","start":{"line":87,"col":21},"end":{"line":87,"col":89},"lines":"      console.error(`KBB API error for ${vehicle.year} ${vehicle.make} ${vehicle.model}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"30db316a6b7a1ed79123a5d2116cdd31a765a43b9e8378c7cbb4abbc9ba3f45890010e158b3fc4afe9f62986dbf77bba25d50cc34a878c77769bd8cb2c2935f7_0"},"04eb29814b0cb2578ae8d9d2836bc33e0c111b1721cc25b21d73765fb8bff866ec561f93a5df3e6e4f19e8403e4bfb9e7bd00271218e8ec3b11ca6b92ba35e8f_0":{"kind":"sast","location":{"path":"server/marketPriceProvider.ts","start":{"line":150,"col":21},"end":{"line":150,"col":96},"lines":"      console.error(`Black Book API error for ${vehicle.year} ${vehicle.make} ${vehicle.model}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"04eb29814b0cb2578ae8d9d2836bc33e0c111b1721cc25b21d73765fb8bff866ec561f93a5df3e6e4f19e8403e4bfb9e7bd00271218e8ec3b11ca6b92ba35e8f_0"},"b685d43a439e68dd190c96292ffa5adf72df33171101fa1b6ee239a208cd1eb0231d230b3a37dc5dc4ca1182789b326953237a9ea3bc22ed2c5d5c8b6f4e059f_0":{"kind":"sast","location":{"path":"server/marketPriceProvider.ts","start":{"line":207,"col":21},"end":{"line":207,"col":93},"lines":"      console.error(`Edmunds API error for ${vehicle.year} ${vehicle.make} ${vehicle.model}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"b685d43a439e68dd190c96292ffa5adf72df33171101fa1b6ee239a208cd1eb0231d230b3a37dc5dc4ca1182789b326953237a9ea3bc22ed2c5d5c8b6f4e059f_0"},"72f94685bcc63786451e005e07b1e079ecd2bcee605ffb88e3cfa3ecea87be980f60d8caf1452847e505c497ca1d2d845b0fba1adbf1b661ba99dcb936e33878_0":{"kind":"sast","location":{"path":"server/marketPriceProvider.ts","start":{"line":264,"col":26},"end":{"line":264,"col":77},"lines":"            console.warn(`⚠️ ${provider.name} attempt ${attempt} failed:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"72f94685bcc63786451e005e07b1e079ecd2bcee605ffb88e3cfa3ecea87be980f60d8caf1452847e505c497ca1d2d845b0fba1adbf1b661ba99dcb936e33878_0"},"d9b5a4fcd661df228927b7a6e060d5660cf7de877b6c2eb47f1b32eebcbada547e3d7fea17997da38c6b7dafef2180f6b5d5b7bc0e4dfa2b94c8279d407de191_0":{"kind":"sast","location":{"path":"server/marketPriceProvider.ts","start":{"line":272,"col":23},"end":{"line":272,"col":89},"lines":"        console.error(`❌ ${provider.name} failed after ${this.retryAttempts} attempts:`, lastError);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"d9b5a4fcd661df228927b7a6e060d5660cf7de877b6c2eb47f1b32eebcbada547e3d7fea17997da38c6b7dafef2180f6b5d5b7bc0e4dfa2b94c8279d407de191_0"},"e6d12e85007ea6d075c7dd0129db34c24e647a8fa3dc173ad802a4c7a1c3643661484f3984c9738f6c0b31c3e9457a1c1c2f205faad75209283cb23c97048f9a_0":{"kind":"sast","location":{"path":"server/marketPriceProvider.ts","start":{"line":274,"col":23},"end":{"line":274,"col":60},"lines":"        console.error(`❌ Provider ${provider.name} error:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"e6d12e85007ea6d075c7dd0129db34c24e647a8fa3dc173ad802a4c7a1c3643661484f3984c9738f6c0b31c3e9457a1c1c2f205faad75209283cb23c97048f9a_0"},"18ab9b2b228a6a544fb3db121602a47af918758dd3245af6310ac8d36f02c574f8a48214a4cdbfbb9c46fa67515c2dfcee4b683b2d6a920cf435662b71cd6f86_0":{"kind":"sast","location":{"path":"server/marketPriceScheduler.ts","start":{"line":215,"col":21},"end":{"line":215,"col":92},"lines":"      console.error(`❌ Failed to update ${vehicle.year} ${vehicle.make} ${vehicle.model}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"18ab9b2b228a6a544fb3db121602a47af918758dd3245af6310ac8d36f02c574f8a48214a4cdbfbb9c46fa67515c2dfcee4b683b2d6a920cf435662b71cd6f86_0"},"5c76920d32d50b073e857dc0c8fc21d78aae3cf4d9e471c89f6450f8a56abb49938dea427acb79c75ad5b5f906d3fafd9ade0c169681bbc0859b5a4eb6c59aed_0":{"kind":"sast","location":{"path":"server/newsAggregator.ts","start":{"line":549,"col":25},"end":{"line":549,"col":62},"lines":"          console.error(`Failed to fetch from ${source.name}:`, error instanceof Error ? error.message : String(error));"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"5c76920d32d50b073e857dc0c8fc21d78aae3cf4d9e471c89f6450f8a56abb49938dea427acb79c75ad5b5f906d3fafd9ade0c169681bbc0859b5a4eb6c59aed_0"},"55c3f0c44b2253b2c361ab435ea8705b04ad5d1f47a5c0b4c8fc9c8d9e3aa2da121e4490106cb96b8846442036fa80cdc9426dacbee00830eb103d0e86a605f5_0":{"kind":"sast","location":{"path":"server/newsAggregator.ts","start":{"line":596,"col":22},"end":{"line":596,"col":74},"lines":"        console.warn(`RSS failed for ${source.name}, trying web scraping:`, error instanceof Error ? error.message : String(error));"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"55c3f0c44b2253b2c361ab435ea8705b04ad5d1f47a5c0b4c8fc9c8d9e3aa2da121e4490106cb96b8846442036fa80cdc9426dacbee00830eb103d0e86a605f5_0"},"997631a5696df1af42cc31b98159b181b235746a9328772031f3529e8489d022c782d3bbee4d5d08202d7ab45398de5e18f1aceb5a44fb52a4acba20b8896947_0":{"kind":"sast","location":{"path":"server/newsAggregator.ts","start":{"line":647,"col":33},"end":{"line":647,"col":39},"lines":"      const articleElements = $(source.selector.articles).slice(0, 5).toArray(); // Limit to 5 stories per source"},"checkId":".config..semgrep.vendored-rules.javascript.jquery.security.audit.jquery-insecure-selector","message":"User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities","severity":"MEDIUM","fingerprint":"997631a5696df1af42cc31b98159b181b235746a9328772031f3529e8489d022c782d3bbee4d5d08202d7ab45398de5e18f1aceb5a44fb52a4acba20b8896947_0"},"5b892a8df5907a96a94d102eced08a66383c5ea90bcbfdf88557c39830d752da1d550b98b7571080cbd15ef50308508eb0b8b558ecd06121ad0c78317ccb1738_0":{"kind":"sast","location":{"path":"server/newsAggregator.ts","start":{"line":694,"col":26},"end":{"line":694,"col":74},"lines":"            console.warn(`Failed to extract full content from ${fullUrl}:`, error instanceof Error ? error.message : String(error));"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"5b892a8df5907a96a94d102eced08a66383c5ea90bcbfdf88557c39830d752da1d550b98b7571080cbd15ef50308508eb0b8b558ecd06121ad0c78317ccb1738_0"},"20cea54f6987486041f8734291b43edd4cfc420095a56ca421aa7ed1f52adf113d88ea6ca318bf89269568bb22b2e9602191286f9b604c1058ebbfe52bb245bd_0":{"kind":"sast","location":{"path":"server/newsAggregator.ts","start":{"line":704,"col":26},"end":{"line":704,"col":74},"lines":"            console.warn(`Failed to download image ${downloadedImageUrl}:`, error instanceof Error ? error.message : String(error));"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"20cea54f6987486041f8734291b43edd4cfc420095a56ca421aa7ed1f52adf113d88ea6ca318bf89269568bb22b2e9602191286f9b604c1058ebbfe52bb245bd_0"},"8b0a1221a2c16ab6db05dcf1c2b1084afe335bdfe078a322fe10ee158ec7058637b7578259e562c8d883637eca3f1574340135d2c3aaaed3e4aeedf0f75a15e8_0":{"kind":"sast","location":{"path":"server/newsAggregator.ts","start":{"line":805,"col":21},"end":{"line":805,"col":61},"lines":"      console.error(`Error fetching RSS from ${source.name}:`, error instanceof Error ? error.message : String(error));"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"8b0a1221a2c16ab6db05dcf1c2b1084afe335bdfe078a322fe10ee158ec7058637b7578259e562c8d883637eca3f1574340135d2c3aaaed3e4aeedf0f75a15e8_0"},"621f6198408921e4090b27ee2a10c1d316923b9c6ab2e7b81b8c9eb6d0a0ad744a25e7404b26b19f305e2bc396a0cdf70807360cf9e0dfb2835314c8d3c8dcc1_0":{"kind":"sast","location":{"path":"server/newsAggregator.ts","start":{"line":1003,"col":42},"end":{"line":1003,"col":50},"lines":"      const tempFilePath = join(tempDir, filename);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal","message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","severity":"MEDIUM","fingerprint":"621f6198408921e4090b27ee2a10c1d316923b9c6ab2e7b81b8c9eb6d0a0ad744a25e7404b26b19f305e2bc396a0cdf70807360cf9e0dfb2835314c8d3c8dcc1_0"},"adbf7c4c0e47f3b7e5015b6c85da53a160c8cf7cf10bf8d76e73d68d98d719d217006c72e9365004a4ee3246931ae48ddea85cef265a2a5a8d6a0063a08cc549_0":{"kind":"sast","location":{"path":"server/newsAggregator.ts","start":{"line":1004,"col":44},"end":{"line":1004,"col":56},"lines":"      const fileStream = createWriteStream(tempFilePath);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename","message":"Detected that function argument `imageUrl` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated.","severity":"MEDIUM","fingerprint":"adbf7c4c0e47f3b7e5015b6c85da53a160c8cf7cf10bf8d76e73d68d98d719d217006c72e9365004a4ee3246931ae48ddea85cef265a2a5a8d6a0063a08cc549_0"},"da9e70593fb74036009474118a9252e7f9df8138811ccf055aff29ecc43e0139617b4c90515ed74e61121e45b9f9be301e58d212f7b60cf1d3944f47e6c4bcbb_0":{"kind":"sast","location":{"path":"server/newsAggregator.ts","start":{"line":1004,"col":44},"end":{"line":1004,"col":56},"lines":"      const fileStream = createWriteStream(tempFilePath);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename","message":"Detected that function argument `storyId` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated.","severity":"MEDIUM","fingerprint":"da9e70593fb74036009474118a9252e7f9df8138811ccf055aff29ecc43e0139617b4c90515ed74e61121e45b9f9be301e58d212f7b60cf1d3944f47e6c4bcbb_0"},"621f6198408921e4090b27ee2a10c1d316923b9c6ab2e7b81b8c9eb6d0a0ad744a25e7404b26b19f305e2bc396a0cdf70807360cf9e0dfb2835314c8d3c8dcc1_1":{"kind":"sast","location":{"path":"server/newsAggregator.ts","start":{"line":1018,"col":50},"end":{"line":1018,"col":58},"lines":"      const publicFilePath = join(publicNewsDir, filename);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal","message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","severity":"MEDIUM","fingerprint":"621f6198408921e4090b27ee2a10c1d316923b9c6ab2e7b81b8c9eb6d0a0ad744a25e7404b26b19f305e2bc396a0cdf70807360cf9e0dfb2835314c8d3c8dcc1_1"},"adbf7c4c0e47f3b7e5015b6c85da53a160c8cf7cf10bf8d76e73d68d98d719d217006c72e9365004a4ee3246931ae48ddea85cef265a2a5a8d6a0063a08cc549_1":{"kind":"sast","location":{"path":"server/newsAggregator.ts","start":{"line":1019,"col":43},"end":{"line":1019,"col":55},"lines":"      const readStream = createReadStream(tempFilePath);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename","message":"Detected that function argument `imageUrl` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated.","severity":"MEDIUM","fingerprint":"adbf7c4c0e47f3b7e5015b6c85da53a160c8cf7cf10bf8d76e73d68d98d719d217006c72e9365004a4ee3246931ae48ddea85cef265a2a5a8d6a0063a08cc549_1"},"da9e70593fb74036009474118a9252e7f9df8138811ccf055aff29ecc43e0139617b4c90515ed74e61121e45b9f9be301e58d212f7b60cf1d3944f47e6c4bcbb_1":{"kind":"sast","location":{"path":"server/newsAggregator.ts","start":{"line":1019,"col":43},"end":{"line":1019,"col":55},"lines":"      const readStream = createReadStream(tempFilePath);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename","message":"Detected that function argument `storyId` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated.","severity":"MEDIUM","fingerprint":"da9e70593fb74036009474118a9252e7f9df8138811ccf055aff29ecc43e0139617b4c90515ed74e61121e45b9f9be301e58d212f7b60cf1d3944f47e6c4bcbb_1"},"5ed5b3485bfa497299a6c9afc4d59e4140a128ae39f5464f3183de6baaddecd244fe8afc91755981115020acebc9d2c7656896e57eee582f6b126d53b6c4f048_0":{"kind":"sast","location":{"path":"server/newsAggregator.ts","start":{"line":1020,"col":45},"end":{"line":1020,"col":59},"lines":"      const writeStream = createWriteStream(publicFilePath);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename","message":"Detected that function argument `imageUrl` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated.","severity":"MEDIUM","fingerprint":"5ed5b3485bfa497299a6c9afc4d59e4140a128ae39f5464f3183de6baaddecd244fe8afc91755981115020acebc9d2c7656896e57eee582f6b126d53b6c4f048_0"},"5fd62deafe40d1d95b5cebc55a96d278acd25ace256968edd6e50d9fa52667157d867ffa4c6d8e6b07ad5c969b5d0974191ba1668a84269e1208f0e232973f14_0":{"kind":"sast","location":{"path":"server/newsAggregator.ts","start":{"line":1020,"col":45},"end":{"line":1020,"col":59},"lines":"      const writeStream = createWriteStream(publicFilePath);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename","message":"Detected that function argument `storyId` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated.","severity":"MEDIUM","fingerprint":"5fd62deafe40d1d95b5cebc55a96d278acd25ace256968edd6e50d9fa52667157d867ffa4c6d8e6b07ad5c969b5d0974191ba1668a84269e1208f0e232973f14_0"},"a38b2aa08bfe7078cbdc4ec96e92926b3b698631ffb99a2e825f6879a889b932d40075d15bc2b82393a301e8a7b41629d64c7b302a9f9372ad14756277e1a2aa_0":{"kind":"sast","location":{"path":"server/newsAggregator.ts","start":{"line":1206,"col":25},"end":{"line":1206,"col":85},"lines":"          console.error(`🖼️ Error scraping image for live story ${story.title}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"a38b2aa08bfe7078cbdc4ec96e92926b3b698631ffb99a2e825f6879a889b932d40075d15bc2b82393a301e8a7b41629d64c7b302a9f9372ad14756277e1a2aa_0"},"c3597323a34c85ec870d7e834c025fc75ceed28a8f70dea09003ac7202babffe769a436bdc3b0931c58e1de6ec6bfd9abb2e0d423f0dcd6a535b54130c8c6f10_0":{"kind":"sast","location":{"path":"server/recallScheduler.ts","start":{"line":150,"col":21},"end":{"line":150,"col":59},"lines":"      console.error(`Error in ${updateType} recall update:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"c3597323a34c85ec870d7e834c025fc75ceed28a8f70dea09003ac7202babffe769a436bdc3b0931c58e1de6ec6bfd9abb2e0d423f0dcd6a535b54130c8c6f10_0"},"e0a26d1d52fc2d167fea5ab5d4784fcbe50edd199db0e4a99065cf860566b1edefc9f0e40cdda907d04d24d1930fc2db11354cd89ce8434bdc382dbe1d91a5d5_0":{"kind":"sast","location":{"path":"server/recallsAggregator.ts","start":{"line":170,"col":25},"end":{"line":170,"col":66},"lines":"          console.error(`Error fetching recalls for year ${year}:`, yearError);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"e0a26d1d52fc2d167fea5ab5d4784fcbe50edd199db0e4a99065cf860566b1edefc9f0e40cdda907d04d24d1930fc2db11354cd89ce8434bdc382dbe1d91a5d5_0"},"0f1a380bc7edd26321787a1ea9c1522041fbc8dcdd6483f64091cba8479928fd9b60292d862ea03ea15215e43bf8621f1ad764537e802e53af88b179260db390_0":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":220,"col":15},"end":{"line":235,"col":9},"lines":"        html: `\n          <h2>New Lead Submission</h2>\n          <ul>\n            <li><strong>Name:</strong> ${validatedData.firstName} ${validatedData.lastName}</li>\n            <li><strong>Email:</strong> ${validatedData.email}</li>\n            <li><strong>Phone:</strong> ${validatedData.phone}</li>\n            <li><strong>Interested In:</strong> ${validatedData.interestedIn} vehicles</li>\n            <li><strong>Vehicle Type:</strong> ${validatedData.vehicleType || 'Not specified'}</li>\n            <li><strong>Budget:</strong> ${validatedData.budget || 'Not specified'}</li>\n            <li><strong>Timeframe:</strong> ${validatedData.timeframe || 'Not specified'}</li>\n            <li><strong>ZIP Code:</strong> ${validatedData.zipCode}</li>\n            <li><strong>Lead Score:</strong> ${lead.leadScore}/100</li>\n            ${validatedData.comments ? `<li><strong>Comments:</strong> ${validatedData.comments}</li>` : ''}\n          </ul>\n          <p><em>Lead ID: ${lead.id} | Submitted on: ${new Date().toLocaleString()}</em></p>\n        `,"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"0f1a380bc7edd26321787a1ea9c1522041fbc8dcdd6483f64091cba8479928fd9b60292d862ea03ea15215e43bf8621f1ad764537e802e53af88b179260db390_0"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_0":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":223,"col":1},"end":{"line":224,"col":1},"lines":"            <li><strong>Name:</strong> ${validatedData.firstName} ${validatedData.lastName}</li>\n            <li><strong>Email:</strong> ${validatedData.email}</li>"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_0"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_1":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":224,"col":1},"end":{"line":225,"col":1},"lines":"            <li><strong>Email:</strong> ${validatedData.email}</li>\n            <li><strong>Phone:</strong> ${validatedData.phone}</li>"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_1"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_2":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":225,"col":1},"end":{"line":226,"col":1},"lines":"            <li><strong>Phone:</strong> ${validatedData.phone}</li>\n            <li><strong>Interested In:</strong> ${validatedData.interestedIn} vehicles</li>"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_2"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_3":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":226,"col":1},"end":{"line":227,"col":1},"lines":"            <li><strong>Interested In:</strong> ${validatedData.interestedIn} vehicles</li>\n            <li><strong>Vehicle Type:</strong> ${validatedData.vehicleType || 'Not specified'}</li>"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_3"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_4":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":227,"col":1},"end":{"line":228,"col":1},"lines":"            <li><strong>Vehicle Type:</strong> ${validatedData.vehicleType || 'Not specified'}</li>\n            <li><strong>Budget:</strong> ${validatedData.budget || 'Not specified'}</li>"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_4"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_5":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":228,"col":1},"end":{"line":229,"col":1},"lines":"            <li><strong>Budget:</strong> ${validatedData.budget || 'Not specified'}</li>\n            <li><strong>Timeframe:</strong> ${validatedData.timeframe || 'Not specified'}</li>"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_5"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_6":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":229,"col":1},"end":{"line":230,"col":1},"lines":"            <li><strong>Timeframe:</strong> ${validatedData.timeframe || 'Not specified'}</li>\n            <li><strong>ZIP Code:</strong> ${validatedData.zipCode}</li>"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_6"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_7":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":230,"col":1},"end":{"line":231,"col":1},"lines":"            <li><strong>ZIP Code:</strong> ${validatedData.zipCode}</li>\n            <li><strong>Lead Score:</strong> ${lead.leadScore}/100</li>"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_7"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_8":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":231,"col":1},"end":{"line":232,"col":1},"lines":"            <li><strong>Lead Score:</strong> ${lead.leadScore}/100</li>\n            ${validatedData.comments ? `<li><strong>Comments:</strong> ${validatedData.comments}</li>` : ''}"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_8"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_9":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":232,"col":1},"end":{"line":233,"col":1},"lines":"            ${validatedData.comments ? `<li><strong>Comments:</strong> ${validatedData.comments}</li>` : ''}\n          </ul>"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_9"},"6fb71fb2ed1edba7f9c7c26869da0d35ec03cfe824db027a2e852fe935dc1a02b8c34d8617eadf0061991766960aab92ffff94c1a90966b9686c3c4775ceeef0_0":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":232,"col":40},"end":{"line":232,"col":102},"lines":"            ${validatedData.comments ? `<li><strong>Comments:</strong> ${validatedData.comments}</li>` : ''}"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"6fb71fb2ed1edba7f9c7c26869da0d35ec03cfe824db027a2e852fe935dc1a02b8c34d8617eadf0061991766960aab92ffff94c1a90966b9686c3c4775ceeef0_0"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_10":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":234,"col":1},"end":{"line":235,"col":1},"lines":"          <p><em>Lead ID: ${lead.id} | Submitted on: ${new Date().toLocaleString()}</em></p>\n        `,"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_10"},"c6261ad2f71cdbcc22fb6434854bef4fa6e1c93555535a47331285f8818f91d55328321f96fc7a3334700c7fbbd1149f287b95590227f7af6f133fdab6cdcabb_0":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":585,"col":15},"end":{"line":595,"col":9},"lines":"        html: `\n          <h2>New Dealer Registration</h2>\n          <p><strong>Business:</strong> ${dealer.businessName}</p>\n          <p><strong>Contact:</strong> ${dealer.contactName}</p>\n          <p><strong>Email:</strong> ${dealer.email}</p>\n          <p><strong>License:</strong> ${dealer.dealerLicenseNumber} (${dealer.dealerLicenseState})</p>\n          <p><strong>Phone:</strong> ${dealer.phone}</p>\n          <p><strong>Address:</strong> ${dealer.address}, ${dealer.city}, ${dealer.state} ${dealer.zipCode}</p>\n          <br>\n          <p>Please verify their license and enable portal access.</p>\n        `"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"c6261ad2f71cdbcc22fb6434854bef4fa6e1c93555535a47331285f8818f91d55328321f96fc7a3334700c7fbbd1149f287b95590227f7af6f133fdab6cdcabb_0"},"0f1a380bc7edd26321787a1ea9c1522041fbc8dcdd6483f64091cba8479928fd9b60292d862ea03ea15215e43bf8621f1ad764537e802e53af88b179260db390_1":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":778,"col":15},"end":{"line":788,"col":9},"lines":"        html: `\n          <h2>New Contact Submission</h2>\n          <ul>\n            <li><strong>Name:</strong> ${validatedData.firstName} ${validatedData.lastName}</li>\n            <li><strong>Email:</strong> ${validatedData.email}</li>\n            <li><strong>Phone:</strong> ${validatedData.phone || 'Not provided'}</li>\n            <li><strong>Subject:</strong> ${validatedData.subject}</li>\n            <li><strong>Message:</strong> ${validatedData.message}</li>\n          </ul>\n          <p><em>Submitted on: ${new Date().toLocaleString()}</em></p>\n        `,"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"0f1a380bc7edd26321787a1ea9c1522041fbc8dcdd6483f64091cba8479928fd9b60292d862ea03ea15215e43bf8621f1ad764537e802e53af88b179260db390_1"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_11":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":781,"col":1},"end":{"line":782,"col":1},"lines":"            <li><strong>Name:</strong> ${validatedData.firstName} ${validatedData.lastName}</li>\n            <li><strong>Email:</strong> ${validatedData.email}</li>"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_11"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_12":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":782,"col":1},"end":{"line":783,"col":1},"lines":"            <li><strong>Email:</strong> ${validatedData.email}</li>\n            <li><strong>Phone:</strong> ${validatedData.phone || 'Not provided'}</li>"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_12"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_13":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":783,"col":1},"end":{"line":784,"col":1},"lines":"            <li><strong>Phone:</strong> ${validatedData.phone || 'Not provided'}</li>\n            <li><strong>Subject:</strong> ${validatedData.subject}</li>"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_13"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_14":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":784,"col":1},"end":{"line":785,"col":1},"lines":"            <li><strong>Subject:</strong> ${validatedData.subject}</li>\n            <li><strong>Message:</strong> ${validatedData.message}</li>"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_14"},"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_15":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":785,"col":1},"end":{"line":786,"col":1},"lines":"            <li><strong>Message:</strong> ${validatedData.message}</li>\n          </ul>"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format","message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","severity":"MEDIUM","fingerprint":"eeef6c47234ec614f51310dbc189fbd0fbe7161f5a43cdf2b2273b27d6e07675f727484486b823ca312518c2fd7d60af12d4b5a34df12032f2501c2db2632ef4_15"},"0f1a380bc7edd26321787a1ea9c1522041fbc8dcdd6483f64091cba8479928fd9b60292d862ea03ea15215e43bf8621f1ad764537e802e53af88b179260db390_2":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":2611,"col":15},"end":{"line":2624,"col":9},"lines":"        html: `\n          <h2>New Car Listing</h2>\n          <ul>\n            <li><strong>Vehicle:</strong> ${validatedData.year} ${validatedData.make} ${validatedData.model}</li>\n            <li><strong>Price:</strong> $${validatedData.price}</li>\n            <li><strong>Condition:</strong> ${validatedData.condition}</li>\n            <li><strong>Seller:</strong> ${validatedData.sellerName}</li>\n            <li><strong>Email:</strong> ${validatedData.sellerEmail}</li>\n            <li><strong>Phone:</strong> ${validatedData.sellerPhone}</li>\n            <li><strong>Location:</strong> ${validatedData.location}</li>\n            <li><strong>Description:</strong> ${validatedData.description}</li>\n          </ul>\n          <p><em>Submitted on: ${new Date().toLocaleString()}</em></p>\n        `,"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"0f1a380bc7edd26321787a1ea9c1522041fbc8dcdd6483f64091cba8479928fd9b60292d862ea03ea15215e43bf8621f1ad764537e802e53af88b179260db390_2"},"b80993c7938e664350c6a44d2f8abef3f2a1ae1b87e8ef7decf2e75996496eb5f1624c60990b1ae05aa91e70a58ae94cd632768cc62e6789cd90dad0a52d0eff_0":{"kind":"sast","location":{"path":"server/routes.ts","start":{"line":4030,"col":21},"end":{"line":4030,"col":70},"lines":"      console.error(`Error generating ${req.params.platform} content:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"b80993c7938e664350c6a44d2f8abef3f2a1ae1b87e8ef7decf2e75996496eb5f1624c60990b1ae05aa91e70a58ae94cd632768cc62e6789cd90dad0a52d0eff_0"},"83c164904d0bd869c10bc1e742556b8bd9273833de75e01aeb84313e5bbcd1f7275e799187932d773ea19a9d28e1957fe3575d4d8760ae252f2bca7be35005e1_0":{"kind":"sast","location":{"path":"server/seedManufacturers.ts","start":{"line":234,"col":23},"end":{"line":234,"col":83},"lines":"        console.error(`❌ Error processing manufacturer ${manufacturerInfo.name}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"83c164904d0bd869c10bc1e742556b8bd9273833de75e01aeb84313e5bbcd1f7275e799187932d773ea19a9d28e1957fe3575d4d8760ae252f2bca7be35005e1_0"},"4512703d0dd6fe8c9cad08615b29b64a594848d60c7ac7b370adbdbe0a4e40d336b83610c2b20670d39277cfb269ed054a21500d740d23656e02371998e65e1c_0":{"kind":"sast","location":{"path":"server/services/EnhancedManufacturerVideoService.ts","start":{"line":179,"col":21},"end":{"line":179,"col":78},"lines":"      console.error(`❌ Error saving manufacturer site ${data.manufacturer}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"4512703d0dd6fe8c9cad08615b29b64a594848d60c7ac7b370adbdbe0a4e40d336b83610c2b20670d39277cfb269ed054a21500d740d23656e02371998e65e1c_0"},"ddf4adb1ca65f545d4416b19539e302e94f5c69ba2b97b0a4bcd3d6f4d894020ba3805f66eb0bb33ac8551d9e95e608dc723ec56a7b68b9eef43393ef1acbf7d_0":{"kind":"sast","location":{"path":"server/services/EnhancedManufacturerVideoService.ts","start":{"line":311,"col":21},"end":{"line":311,"col":62},"lines":"      console.error(`❌ Error scraping ${site.manufacturer}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"ddf4adb1ca65f545d4416b19539e302e94f5c69ba2b97b0a4bcd3d6f4d894020ba3805f66eb0bb33ac8551d9e95e608dc723ec56a7b68b9eef43393ef1acbf7d_0"},"de160ab47073167b9acb0f91540d078730fa501262c1977f0f674cbe73c05a7950b486278adeb631a0f2f9263db197d944f94a3109c31dda18f19c128672643f_0":{"kind":"sast","location":{"path":"server/services/EnhancedManufacturerVideoService.ts","start":{"line":400,"col":21},"end":{"line":400,"col":74},"lines":"      console.error(`❌ Error fetching videos from ${site.manufacturer}:`, error.message);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"de160ab47073167b9acb0f91540d078730fa501262c1977f0f674cbe73c05a7950b486278adeb631a0f2f9263db197d944f94a3109c31dda18f19c128672643f_0"},"e54196a9721b78cbaaa7eca7c6f73c689630f0d65fec60bc28749610d4cb164317ba0b2c8edf3d1b6f970aef1a0224f200fa2ccad0734dcc53a3ff3125b93a7d_0":{"kind":"sast","location":{"path":"server/services/videoScrapingScheduler.ts","start":{"line":204,"col":25},"end":{"line":204,"col":81},"lines":"          console.error(`❌ Scheduled scraping failed for ${site.manufacturer}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"e54196a9721b78cbaaa7eca7c6f73c689630f0d65fec60bc28749610d4cb164317ba0b2c8edf3d1b6f970aef1a0224f200fa2ccad0734dcc53a3ff3125b93a7d_0"},"230967a8fb1d53ad79b8df365846c993fe2a1ca31bc6386eed5727a6587c6daa0198a2cb910d8c6e4822585e8b1edafa3785b80c0d98e3424e5e07a34dec647c_0":{"kind":"sast","location":{"path":"server/services/videoScrapingScheduler.ts","start":{"line":250,"col":26},"end":{"line":250,"col":84},"lines":"            console.warn(`⚠️  Initial scraping failed for ${site.manufacturer}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"230967a8fb1d53ad79b8df365846c993fe2a1ca31bc6386eed5727a6587c6daa0198a2cb910d8c6e4822585e8b1edafa3785b80c0d98e3424e5e07a34dec647c_0"},"10a1d6d00b6c17bda74d3bb209d95d1b72563c09be31ab3dbf34cb3d6b69ad94ffefa4121bea325e08f007c2af700111d9c22ab857435127bd149ecd90ac556d_0":{"kind":"sast","location":{"path":"server/services/videoScrapingService.ts","start":{"line":85,"col":25},"end":{"line":85,"col":68},"lines":"          console.error(`❌ Failed to scrape ${site.manufacturer}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"10a1d6d00b6c17bda74d3bb209d95d1b72563c09be31ab3dbf34cb3d6b69ad94ffefa4121bea325e08f007c2af700111d9c22ab857435127bd149ecd90ac556d_0"},"8dd494cbbc20801aca974beae4c62d5284c720f86932f7676012468cc661b35d86668eede7330af8a0aa68c362c9771d28c683993e23e6307fb46c2cd6d1332c_0":{"kind":"sast","location":{"path":"server/services/videoScrapingService.ts","start":{"line":200,"col":31},"end":{"line":200,"col":40},"lines":"      const videoElements = $(selectors.containers).slice(0, this.MAX_VIDEOS_PER_SITE);"},"checkId":".config..semgrep.vendored-rules.javascript.jquery.security.audit.jquery-insecure-selector","message":"User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities","severity":"MEDIUM","fingerprint":"8dd494cbbc20801aca974beae4c62d5284c720f86932f7676012468cc661b35d86668eede7330af8a0aa68c362c9771d28c683993e23e6307fb46c2cd6d1332c_0"},"06a007b9854ff6e146e7620ff50978c2fc84752098ce0106d54cce17b5d18712ed013c487012cc9c17a390224c2604f72cb4fba42cf7d1356212fc986759f488_0":{"kind":"sast","location":{"path":"server/services/videoScrapingService.ts","start":{"line":248,"col":24},"end":{"line":248,"col":101},"lines":"          console.warn(`⚠️  Error parsing video element ${index} for ${siteConfig.manufacturer}:`, elementError);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"06a007b9854ff6e146e7620ff50978c2fc84752098ce0106d54cce17b5d18712ed013c487012cc9c17a390224c2604f72cb4fba42cf7d1356212fc986759f488_0"},"3dfb52302a33ad182777a66a25c138f3cac17182bd877b005cbf4c5b5d065691f54f988b3902e8d4945ad108e35dec3f482905d5e6bd349c557cc99d15c4c899_0":{"kind":"sast","location":{"path":"server/services/videoScrapingService.ts","start":{"line":253,"col":21},"end":{"line":253,"col":76},"lines":"      console.error(`❌ Error parsing HTML for ${siteConfig.manufacturer}:`, parseError);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"3dfb52302a33ad182777a66a25c138f3cac17182bd877b005cbf4c5b5d065691f54f988b3902e8d4945ad108e35dec3f482905d5e6bd349c557cc99d15c4c899_0"},"d098330632c47e98b745588ae7823d74d20ee543b45edef7dbec975fdaa2392111b1a06c184643382403cdc0dbde60f88296dba3a681560b38aba6d374cd8d7d_0":{"kind":"sast","location":{"path":"server/services/videoScrapingService.ts","start":{"line":440,"col":21},"end":{"line":440,"col":77},"lines":"      console.error(`❌ Error saving videos for ${siteConfig.manufacturer}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"d098330632c47e98b745588ae7823d74d20ee543b45edef7dbec975fdaa2392111b1a06c184643382403cdc0dbde60f88296dba3a681560b38aba6d374cd8d7d_0"},"af2340f856873b70caa2c3a33b7e38ce6140da05804166d17f0c44aa1ffacd500ae0b8955b1fe963328eb99f914e5a353de6241ae1a4809a7018a000b01796d1_0":{"kind":"sast","location":{"path":"server/services/videoScrapingService.ts","start":{"line":452,"col":16},"end":{"line":452,"col":138},"lines":"        return `<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/${videoId}\" frameborder=\"0\" allowfullscreen></iframe>`;"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"af2340f856873b70caa2c3a33b7e38ce6140da05804166d17f0c44aa1ffacd500ae0b8955b1fe963328eb99f914e5a353de6241ae1a4809a7018a000b01796d1_0"},"e18c5d7c130280c89e00eeed504d968bda776fe38c6b2c72053914a738d825e19f25b2e6173c0f461d0132b69185162fdb41e4841c4d16fa735bf278c0ea5d4a_0":{"kind":"sast","location":{"path":"server/services/videoScrapingService.ts","start":{"line":460,"col":16},"end":{"line":460,"col":139},"lines":"        return `<iframe src=\"https://player.vimeo.com/video/${videoId}\" width=\"560\" height=\"315\" frameborder=\"0\" allowfullscreen></iframe>`;"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"e18c5d7c130280c89e00eeed504d968bda776fe38c6b2c72053914a738d825e19f25b2e6173c0f461d0132b69185162fdb41e4841c4d16fa735bf278c0ea5d4a_0"},"bd10b0bd9c4e8b3b0eb39db7bfb6f0117e8707f53f379b75a8996aa47c912239031869c6318f57a588b7f7e49ac306251052c9e0bed687286c2115bd648d0fc0_0":{"kind":"sast","location":{"path":"server/services/videoScrapingService.ts","start":{"line":466,"col":14},"end":{"line":466,"col":151},"lines":"      return `<video width=\"560\" height=\"315\" controls><source src=\"${videoUrl}\" type=\"video/mp4\">Your browser does not support the video tag.</video>`;"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"bd10b0bd9c4e8b3b0eb39db7bfb6f0117e8707f53f379b75a8996aa47c912239031869c6318f57a588b7f7e49ac306251052c9e0bed687286c2115bd648d0fc0_0"},"39f0d1517ff6e2312ad4929a5f71036246da1f764a6fe7e4f52479192df654d515305adc2a03c376a69cf76a77b9ec4c424a893a22489c90b0c07f2c05a33d34_0":{"kind":"sast","location":{"path":"server/shopifyIntegration.ts","start":{"line":26,"col":21},"end":{"line":26,"col":68},"lines":"      console.error(`Failed to register store ${config.shopDomain}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"39f0d1517ff6e2312ad4929a5f71036246da1f764a6fe7e4f52479192df654d515305adc2a03c376a69cf76a77b9ec4c424a893a22489c90b0c07f2c05a33d34_0"},"e26112ddb5344e675eff36252a961e7b07f2a92119ddb7e61186b6384e3877f8b070dfe7f93c182594d6627b18086cdc445154c46552630a098432ab87c29645_0":{"kind":"sast","location":{"path":"server/shopifyIntegration.ts","start":{"line":70,"col":21},"end":{"line":70,"col":52},"lines":"      console.error(`Failed to sync lead ${leadId}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"e26112ddb5344e675eff36252a961e7b07f2a92119ddb7e61186b6384e3877f8b070dfe7f93c182594d6627b18086cdc445154c46552630a098432ab87c29645_0"},"608dbeb6d1f0a7a3ae766bfafdc438d70d6233c1ab4a3d605afa0c831c0e3195c75e44bb94c363153e0a362c6ad1d204c0cf550ce3a99b0b5e24fd423cb0ad0c_0":{"kind":"sast","location":{"path":"server/shopifyIntegration.ts","start":{"line":102,"col":21},"end":{"line":102,"col":70},"lines":"      console.error(`Failed to sync inventory for dealer ${dealerId}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"608dbeb6d1f0a7a3ae766bfafdc438d70d6233c1ab4a3d605afa0c831c0e3195c75e44bb94c363153e0a362c6ad1d204c0cf550ce3a99b0b5e24fd423cb0ad0c_0"},"9222e6650e08d97d04c783526334f0496bb0facf6add22023583ff8086cd83d5ee520f6111538e354a786cd290b33859f18f509fc18267ae76f778a61fe3d35f_0":{"kind":"sast","location":{"path":"server/shopifyIntegration.ts","start":{"line":189,"col":21},"end":{"line":189,"col":59},"lines":"      console.error(`Failed to remove store ${shopDomain}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"9222e6650e08d97d04c783526334f0496bb0facf6add22023583ff8086cd83d5ee520f6111538e354a786cd290b33859f18f509fc18267ae76f778a61fe3d35f_0"},"d701caa304e747acabc660d6daeffd56d6e623c8556d9bbc2b74cd98c986e26909e1b1bef9a0762812be0ad9a8681d92664e11835b3817b66e7095dbb8b18a8c_0":{"kind":"sast","location":{"path":"server/shopifyService.ts","start":{"line":436,"col":49},"end":{"line":436,"col":69},"lines":"              ${vehicle.features.map(feature => `<li>${feature}</li>`).join('')}"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string","message":"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS).","severity":"MEDIUM","fingerprint":"d701caa304e747acabc660d6daeffd56d6e623c8556d9bbc2b74cd98c986e26909e1b1bef9a0762812be0ad9a8681d92664e11835b3817b66e7095dbb8b18a8c_0"},"2db2fbe457c8ca397bf44f595a6bca50bca50e7bf7ef4a5ebe2972179c3115d690ed5477a9a791eab1968d6e8c65f16c8dd959de172feeb5fca94e8a4028c462_0":{"kind":"sast","location":{"path":"server/socialMediaGenerator.ts","start":{"line":177,"col":21},"end":{"line":177,"col":59},"lines":"      console.error(`Error generating ${platform} content:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"2db2fbe457c8ca397bf44f595a6bca50bca50e7bf7ef4a5ebe2972179c3115d690ed5477a9a791eab1968d6e8c65f16c8dd959de172feeb5fca94e8a4028c462_0"},"0f42334b1a1cec993e2937a5663e4e09a5d2fc3d35e6f228091f3d96b25f56fb868221fce248fa794fa43cd2a25b77d0339888746a44948a391bc8cbfecea4f3_0":{"kind":"sast","location":{"path":"server/storage.ts","start":{"line":568,"col":24},"end":{"line":568,"col":62},"lines":"          console.warn(`Error converting DBF record ${index}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"0f42334b1a1cec993e2937a5663e4e09a5d2fc3d35e6f228091f3d96b25f56fb868221fce248fa794fa43cd2a25b77d0339888746a44948a391bc8cbfecea4f3_0"},"ed6b20bd455a64d2af3f29f942e647ff0986a24f3c0182db326553cf0facb1b9b2383bcfec72ef041d41556ca11f8e333e202e717074f0a6c3f95c8fe74d19ae_0":{"kind":"sast","location":{"path":"server/storage.ts","start":{"line":640,"col":23},"end":{"line":640,"col":89},"lines":"        const regex = new RegExp(`\\\\b${upperBrand.replace(/[-\\s]/g, '[-\\\\s]')}\\\\b`, 'i');"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-regexp","message":"RegExp() called with a `brand` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.","severity":"MEDIUM","fingerprint":"ed6b20bd455a64d2af3f29f942e647ff0986a24f3c0182db326553cf0facb1b9b2383bcfec72ef041d41556ca11f8e333e202e717074f0a6c3f95c8fe74d19ae_0"},"1e882d1f9c23dd759a33d745c51e707722e10ac5047973a6a6bad00b99e113cbd7e5935baa8b6376a221645341a2af0b45a9c005ab284f052805477a12e5e1cd_0":{"kind":"sast","location":{"path":"server/storage.ts","start":{"line":3222,"col":24},"end":{"line":3225,"col":11},"lines":"        result = await db.execute(`\n          SELECT DISTINCT make FROM fuel_economy_data \n          ORDER BY make\n        `);"},"checkId":".config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw","message":"Replace pool.query(), db.execute() and sql.raw() calls with Drizzle's recommended sql`...` template literals or Drizzle's query builders. This is a required coding standard for all Drizzle projects regardless of context (including migrations). Raw string queries violate framework conventions and must be converted to maintain codebase consistency and type safety.","severity":"HIGH","fingerprint":"1e882d1f9c23dd759a33d745c51e707722e10ac5047973a6a6bad00b99e113cbd7e5935baa8b6376a221645341a2af0b45a9c005ab284f052805477a12e5e1cd_0"},"1e882d1f9c23dd759a33d745c51e707722e10ac5047973a6a6bad00b99e113cbd7e5935baa8b6376a221645341a2af0b45a9c005ab284f052805477a12e5e1cd_1":{"kind":"sast","location":{"path":"server/storage.ts","start":{"line":3251,"col":33},"end":{"line":3251,"col":94},"lines":"      const countResult = await db.execute(`SELECT COUNT(*) as total FROM fuel_economy_data`);"},"checkId":".config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw","message":"Replace pool.query(), db.execute() and sql.raw() calls with Drizzle's recommended sql`...` template literals or Drizzle's query builders. This is a required coding standard for all Drizzle projects regardless of context (including migrations). Raw string queries violate framework conventions and must be converted to maintain codebase consistency and type safety.","severity":"HIGH","fingerprint":"1e882d1f9c23dd759a33d745c51e707722e10ac5047973a6a6bad00b99e113cbd7e5935baa8b6376a221645341a2af0b45a9c005ab284f052805477a12e5e1cd_1"},"1e882d1f9c23dd759a33d745c51e707722e10ac5047973a6a6bad00b99e113cbd7e5935baa8b6376a221645341a2af0b45a9c005ab284f052805477a12e5e1cd_2":{"kind":"sast","location":{"path":"server/storage.ts","start":{"line":3252,"col":31},"end":{"line":3252,"col":126},"lines":"      const avgResult = await db.execute(`SELECT AVG(combined_mpg) as average FROM fuel_economy_data WHERE combined_mpg > 0`);"},"checkId":".config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw","message":"Replace pool.query(), db.execute() and sql.raw() calls with Drizzle's recommended sql`...` template literals or Drizzle's query builders. This is a required coding standard for all Drizzle projects regardless of context (including migrations). Raw string queries violate framework conventions and must be converted to maintain codebase consistency and type safety.","severity":"HIGH","fingerprint":"1e882d1f9c23dd759a33d745c51e707722e10ac5047973a6a6bad00b99e113cbd7e5935baa8b6376a221645341a2af0b45a9c005ab284f052805477a12e5e1cd_2"},"1e882d1f9c23dd759a33d745c51e707722e10ac5047973a6a6bad00b99e113cbd7e5935baa8b6376a221645341a2af0b45a9c005ab284f052805477a12e5e1cd_3":{"kind":"sast","location":{"path":"server/storage.ts","start":{"line":3253,"col":31},"end":{"line":3258,"col":9},"lines":"      const topResult = await db.execute(`\n        SELECT * FROM fuel_economy_data \n        WHERE combined_mpg > 0 \n        ORDER BY combined_mpg DESC \n        LIMIT 1\n      `);"},"checkId":".config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw","message":"Replace pool.query(), db.execute() and sql.raw() calls with Drizzle's recommended sql`...` template literals or Drizzle's query builders. This is a required coding standard for all Drizzle projects regardless of context (including migrations). Raw string queries violate framework conventions and must be converted to maintain codebase consistency and type safety.","severity":"HIGH","fingerprint":"1e882d1f9c23dd759a33d745c51e707722e10ac5047973a6a6bad00b99e113cbd7e5935baa8b6376a221645341a2af0b45a9c005ab284f052805477a12e5e1cd_3"},"03a20e5436a649db5848525e0459ed18515afee8fb82d22404dc5476a18cb34f7008b121b7af0c0f4332e84c9aa972fb164ede2c7265a88051e3c4a1345b2325_0":{"kind":"sast","location":{"path":"server/storyArchiveService.ts","start":{"line":390,"col":23},"end":{"line":390,"col":67},"lines":"        console.error(`Error importing story \"${storyData.title}\":`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"03a20e5436a649db5848525e0459ed18515afee8fb82d22404dc5476a18cb34f7008b121b7af0c0f4332e84c9aa972fb164ede2c7265a88051e3c4a1345b2325_0"},"483739303dd64fe6e5a95dbe05ca70944e1f79de29f7aca75a8b86cfc95a38e25af69c0324dad3b76b805008f0e8d2c9f8266fb196f304490beae009af65fd05_0":{"kind":"sast","location":{"path":"server/storyParser.ts","start":{"line":65,"col":25},"end":{"line":65,"col":97},"lines":"      const makeRegex = new RegExp(`\\\\b${make.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}\\\\b`, 'gi');"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-regexp","message":"RegExp() called with a `make` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.","severity":"MEDIUM","fingerprint":"483739303dd64fe6e5a95dbe05ca70944e1f79de29f7aca75a8b86cfc95a38e25af69c0324dad3b76b805008f0e8d2c9f8266fb196f304490beae009af65fd05_0"},"2b8a4af1b11dcbe488a5703db88ef62f826ff70cd9591ebc38d5f72c5cf4a7c2ffb4d078baf4d3e194b07959833390c11dc0021f5142f1fd84356a5a3b068bce_0":{"kind":"sast","location":{"path":"server/streakService.ts","start":{"line":146,"col":23},"end":{"line":146,"col":83},"lines":"        console.error(`Failed to award streak milestone for ${currentStreak} days:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"2b8a4af1b11dcbe488a5703db88ef62f826ff70cd9591ebc38d5f72c5cf4a7c2ffb4d078baf4d3e194b07959833390c11dc0021f5142f1fd84356a5a3b068bce_0"},"cd84b3bcba795c153f6dbe431f27ba7923e07c4d96dd92e789e9e002db5a4708d73d93069b195237dc7089e45f124ab66f405093f92ca551c2740211743e292f_0":{"kind":"sast","location":{"path":"server/surveyAnalyzer.js","start":{"line":5,"col":36},"end":{"line":5,"col":44},"lines":"    const buffer = fs.readFileSync(filePath);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename","message":"Detected that function argument `filePath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated.","severity":"MEDIUM","fingerprint":"cd84b3bcba795c153f6dbe431f27ba7923e07c4d96dd92e789e9e002db5a4708d73d93069b195237dc7089e45f124ab66f405093f92ca551c2740211743e292f_0"},"98f959e984cd4ea4ad1af2cb8be1df4723db8d229886df8f9af459a9ab7f9396e757a6229f0cde1520d8a8767e76871edbeccd7647fd94a3522e011ab275c67f_0":{"kind":"sast","location":{"path":"server/surveyAnalyzer.js","start":{"line":79,"col":19},"end":{"line":79,"col":36},"lines":"      console.log(`Record ${i + 1}:`, JSON.stringify(record, null, 2));"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"98f959e984cd4ea4ad1af2cb8be1df4723db8d229886df8f9af459a9ab7f9396e757a6229f0cde1520d8a8767e76871edbeccd7647fd94a3522e011ab275c67f_0"},"f9624a990cf570773f0eca685090eda0111e0c0543e8bd4b888b2336c2070df2c7f7dc945b14938518ce884c0184376eb2dc772f59b5565d9aefc660317a49fd_0":{"kind":"sast","location":{"path":"server/surveyDbfParser.ts","start":{"line":24,"col":35},"end":{"line":24,"col":43},"lines":"    this.buffer = fs.readFileSync(filePath);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename","message":"Detected that function argument `filePath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated.","severity":"MEDIUM","fingerprint":"f9624a990cf570773f0eca685090eda0111e0c0543e8bd4b888b2336c2070df2c7f7dc945b14938518ce884c0184376eb2dc772f59b5565d9aefc660317a49fd_0"},"698f2ef043c7be086f41bff7227c91b8246d63680300cd5a14145bd60b3e9975b76393288583332c27096f078bf6e9df503d3237c3bde76878fe971b4b6d06d2_0":{"kind":"sast","location":{"path":"server/surveyImporter.ts","start":{"line":150,"col":23},"end":{"line":150,"col":68},"lines":"        console.error(`Error importing batch ${i}-${i + batchSize}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"698f2ef043c7be086f41bff7227c91b8246d63680300cd5a14145bd60b3e9975b76393288583332c27096f078bf6e9df503d3237c3bde76878fe971b4b6d06d2_0"},"712c59d821336a11e60690abd60680bb6361248663b86bc2fb28e64d2e54839cde78fc69d705cc5c0c7e85f222654d50d92648c490482957f664c66cbca5c3b1_0":{"kind":"sast","location":{"path":"server/temp/surveyDbfParser.js","start":{"line":7,"col":39},"end":{"line":7,"col":47},"lines":"        this.buffer = fs.readFileSync(filePath);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename","message":"Detected that function argument `filePath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated.","severity":"MEDIUM","fingerprint":"712c59d821336a11e60690abd60680bb6361248663b86bc2fb28e64d2e54839cde78fc69d705cc5c0c7e85f222654d50d92648c490482957f664c66cbca5c3b1_0"},"79457cca20f326fcb25b9bb3857976291a6d7879ec98eec8978e4eff7a114ac2097e813baaf793eabb4fe571b49198b9705d1c24dee61c979a8fd19073600c15_0":{"kind":"sast","location":{"path":"server/videoDownloadService.ts","start":{"line":173,"col":21},"end":{"line":173,"col":62},"lines":"      console.error(`❌ Failed to download video ${videoId}:`, error);"},"checkId":".config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring","message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","severity":"LOW","fingerprint":"79457cca20f326fcb25b9bb3857976291a6d7879ec98eec8978e4eff7a114ac2097e813baaf793eabb4fe571b49198b9705d1c24dee61c979a8fd19073600c15_0"},"34868b03e9ee6f908129580d53f4e1365819c98f6e4b22aebcd9372fe3ddd3cfb699d5ee23c4577b20df0a5c41c36bf745c9aeafc36a41c5edf7776751206258_0":{"kind":"sast","location":{"path":"server/videoStreamingProxy.ts","start":{"line":173,"col":18},"end":{"line":173,"col":24},"lines":"        res.send(buffer);"},"checkId":".config..semgrep.vendored-rules.javascript.express.security.audit.xss.direct-response-write","message":"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML.","severity":"MEDIUM","fingerprint":"34868b03e9ee6f908129580d53f4e1365819c98f6e4b22aebcd9372fe3ddd3cfb699d5ee23c4577b20df0a5c41c36bf745c9aeafc36a41c5edf7776751206258_0"},"cf0e8296be258d6a5f92c5760490978ea10a231276e6ae23c197047822f594cb798f837b159045fe04e6b611e1efcdd8fa7ff6ee016acd1c04b96b5cebcff32b_0":{"kind":"sast","location":{"path":"video_diagnostics.py","start":{"line":405,"col":12},"end":{"line":405,"col":66},"lines":"    return render_template_string(HTML_TEMPLATE, results=results)"},"checkId":".config..semgrep.vendored-rules.python.flask.security.audit.render-template-string","message":"Found a template created with string formatting. This is susceptible to server-side template injection and cross-site scripting attacks.","severity":"MEDIUM","fingerprint":"cf0e8296be258d6a5f92c5760490978ea10a231276e6ae23c197047822f594cb798f837b159045fe04e6b611e1efcdd8fa7ff6ee016acd1c04b96b5cebcff32b_0"},"705f3aefaaebf7cc2f78634f02d58fd39bf5fc3c1091f2f9cbff98fc0f1372db52173dbf48fb224c15f4a7be2395922e3a19ac0dde5a17fbbaa8204bce7f1f69_0":{"kind":"sast","location":{"path":"video_diagnostics.py","start":{"line":419,"col":5},"end":{"line":419,"col":52},"lines":"    app.run(host='0.0.0.0', port=5001, debug=False)"},"checkId":".config..semgrep.vendored-rules.python.flask.security.audit.avoid_app_run_with_bad_host","message":"Running flask app with host 0.0.0.0 could expose the server publicly.","severity":"MEDIUM","fingerprint":"705f3aefaaebf7cc2f78634f02d58fd39bf5fc3c1091f2f9cbff98fc0f1372db52173dbf48fb224c15f4a7be2395922e3a19ac0dde5a17fbbaa8204bce7f1f69_0"}}}